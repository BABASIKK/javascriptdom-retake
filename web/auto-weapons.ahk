#Persistent

#CommentFlag //
global processName := "gta_sa.exe"

global texts := []

current := -1

start:

{
texts.Push([[],[]])

texts.Push([["/me снял кастет и убрал его в карман в сумку и закрыл ее" ], ["/me надел кастет", "/me готов ударить" ]])

texts.Push([["/me убрал клюшку в сумку и закрыл ее"], ["/me взял клюшку в руки"]])

texts.Push([["/me убрал дубинку в поясную сумку."], [ "/me достал дубинку с поясной подсумки", "/me нанёс пару ударов в почки подозреваемого." ]])

texts.Push([["/me убрал нож в сумку и закрыл ее"], ["/me достал нож.", "/do На лице видны ярость и отчаяние."]])

texts.Push([["/me убрал биту за спину."], ["/me легким замахом достал биту из-за спины.", "/me готов ударить битой." ]])

texts.Push([["/me убрал лопату в сумку и закрыл ее."], ["/me снял лопату и взял ее за черенок." ]])

texts.Push([["/me убрал кий в сумку и закрыл ее."], ["/me снял кий и взял его в руку."]])

texts.Push([["/me аккуратно положил тесак в сумку."], ["/me вытащил огромный тесак из-за спины." ]])

texts.Push([["/me выключил бензопилу и убрал ее в сумку."], ["/me взял бензопилу и завел ее.", "/do Слышен скрежет мусора, попадающего под цепь." ]])

texts.Push([[], []])

texts.Push([[], []])

texts.Push([[], []])

texts.Push([[], []])

texts.Push([[], ["/me взял цветы в руки."]])

texts.Push([["/me убрал топор в специальную сумку."], ["/do Топор висит за спиной.", "/me резким размахом достал топор из-за спины."]])

texts.Push([["/me убрал гранату в сумку и закрыл ее"], ["/do Граната закреплена на поясе", "/me взял гранату в руки"]])

texts.Push([["/me убрал гранату в сумку и закрыл ее"], ["/do Дымовая граната закреплена на поясе", "/me взял дымовую гранату в руки"]])

texts.Push([["/me убрал гранату в сумку и закрыл ее"], ["/do Коктейль Молотова закреплен на поясе", "/me взял коктейль Молотова в руки"]])

texts.Push([[], ["/me достал неизвестное оружие"]])

texts.Push([[], ["/me достал неизвестное оружие"]])

texts.Push([[], ["/me достал неизвестное оружие"]])

texts.Push([["/me поставил пистолет на предохранитель и убрал его в сумку на поясе."], ["/me достал пистолет, после чего снял с предохранителя.", "/me готов к стрельбе с пистолета."]])

texts.Push([["/me выключив напряжение, поместил электрошокер в поясную кобуру."], ["/me достал электрошокер из поясной кобуры, затем включил напряжение", "/me сделал пару выстрелов в подозреваемого."]])

texts.Push([["/me поставил на предохранитель, затем убрал пистолет в кобуру.", "/do Пистолет Desert Deagle в кобуре."], ["/me достал пистолет Desert Eagle с гравировкой 'army' ", "/me снял с предохранителя, затем сделал выстрел."]])

texts.Push([["/me приопустил дробовик,поставил на предохранитель,убрал оружие."], ["/me взял дробовик{,}снял с предохранителя."]])

texts.Push([["/me поставил дробовик на предохранитель и убрал его в сумку."], ["/do Двуствольный дробовик висит за спиной.", "/me быстрым движением схватил дробовик и приготовился стрелять."]])

texts.Push([["/me поставил дробовик на предохранитель и повесил его за спину."], ["/do Боевой дробовик висит за спиной.", "/me быстрым движением схватил дробовик и приготовился стрелять."]])

texts.Push([["/me поставил полуавтомат на предохранитель и убрал его в сумку", "/do Руки свободны."], ["/do Полуавтомат 'UZI' закреплен на поясе.", "/me выхватил полуавтомат 'UZI' и приготовился к бою."]])

texts.Push([["/me поставил предохранитель, повесил оружие на плече."], ["/me снял ПП-19 Витязь с ремня на плече, переместил переводчик огня на позицию АВ.", "/me взведя затворную раму, дослал патрон в патронник, кладёт палец на спусковой крючек." ]])
texts.Push([["/me приопустил AK-74,поставил на предохранитель,убрал оружие."], ["/me взял AK-74{,}снял с предохранителя."]])

texts.Push([["/me поставил на предохранитель автомат M4A1.", "/me повесил автомат М4А1 на спину."], ["/me снял автомат М4А1 с гравировкой 'army' из-за спины, снял с предохранителя.", "/me готов выстрелить с автомата М4А1" ]])

texts.Push([["/me поставил пистолет-пулемет на предохранитель и убрал его в сумку"], ["/do Пистолет-пулемет 'TEC9' закреплен на поясе", "/me взял пистолет-пулемет 'TEC9' в правую руку"]])

texts.Push([["/me приопустил СВД,поставил на предохранитель,убрал оружие"], ["/me взял СВД{,}снял с предохранителя "]])

texts.Push([["/me поставил винтовку на предохранитель и убрал ее в сумку"], ["/do Снайперская винтовка висит за спиной", "/me взял снайперскую винтовку в руки"]])

texts.Push([["/me спрятал РПГ в сумку"], ["/do РПГ закрелен висит за спиной", "/me взял РПГ в руки"]])

texts.Push([["/me спрятал ракетницу в сумку"], ["/do Самонаводящаяся ракетница висит за спиной", "/me взял самонаводящуюся ракетницу в руки"]])

texts.Push([["/me спрятал огнемет в сумку"], ["/do Огнемет висит за спиной", "/me взял огнемет в руки"]])

texts.Push([["/me спрятал пулемет в сумку"], ["/do Тяжелый пулемет висит за спиной", "/me снял тяжелый пулемет и приготовился к бою"]])

texts.Push([["/me спрятал пакет со взрывчаткой в сумку"], ["/do Пакет со взрывчаткой закреплен на поясе", "/me снял пакет со взрывчаткой и взял его в руку"]])

texts.Push([["/me спрятал детонатор в сумку"], ["/do Детонатор лежит в кармане", "/me сунул руку в карман и достал детонатор"]])

texts.Push([["/me спрятал балончик краски в сумку"], ["/do Балончик краски закреплен на поясе", "/me взял балончик краски в руки"]])

texts.Push([["/me спрятал огнетушитель в сумку"], ["/do Огнетушитель висит за спиной", "/me взял огнетушитель в руки"]])

texts.Push([[], []])

SetTimer, cw, 900
}

cw:

{

weapon := getWeaponId()

if ((weapon == -1) || (weapon == current) || (getStatus() == 0))

return

if (current > 0) {
playWeapon(current, 1)

}

current := weapon

playWeapon(current, 2)

}

playWeapon(id, type) {

array := texts[id + 1][type]

for t in array

{

sleep 900

sendChat(texts[id + 1][type][t])

}

}

sendChat(text) {

WinGet, WIN, ProcessName, A

if (WIN != processName)

return

SendMessage, 0x50,, 0x4190419,, A

SendInput {F6}%text%{Enter}

}

getWeaponId() {

return ProcessReadMemory(0xBAA410, processName)

}

getStatus() {

return ProcessReadMemory(ProcessReadMemory(0xB6F5F0, processName) + 0x15C, processName)

}

ProcessReadMemory(address, processIDorName, type := "Int", numBytes := 4)
{

VarSetCapacity(buf, numBytes, 0)

Process Exist, %processIDorName%

if !processID := ErrorLevel

return -1

if !processHandle := DllCall("OpenProcess", "Int", 24, "UInt", 0, "UInt", processID, "Ptr")

return -1

result := DllCall("ReadProcessMemory", "Ptr", processHandle, "Ptr", address, "Ptr", &buf, "Ptr", numBytes, "PtrP", numBytesRead, "UInt")

if !DllCall("CloseHandle", "Ptr", processHandle, "UInt") && !result
return -1
if !result

return -1

if !numBytesRead

return -1

return (type = "Str")

? StrGet(&buf, numBytes)

: NumGet(buf, type)
}